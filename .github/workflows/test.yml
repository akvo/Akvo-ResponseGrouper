name: Build & Test
on:
  push:
    branches:
      - main
      - feature*
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox and any other packages
        run: pip install tox
      - name: Run Tox
        # Run tox using the version of Python in `PATH`
        run: tox -e py
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12-alpine
          env:
            POSTGRES_PASSWORD: password
          volumes:
            - ./dev/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
            - pg-data:/var/lib/postgresql/data
            - ./dev/db/script:/script:ro
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Container
        run: docker compose -f "docker-compose.ci.yml" up
      - name: Stop Containers
        if: always()
        run: docker compose -f "docker-compose.ci.yml" up -d
