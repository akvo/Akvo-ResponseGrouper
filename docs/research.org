:REVEAL_PROPERTIES:
#+REVEAL_ROOT: file:///home/dedenbangkit/.doom.d/custom/reveal.js
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_THEME: akvo
:END:

#+TITLE: Response Group Research
#+Author: Deden Bangkit

#+PROPERTY: header-args:sql     :exports both
#+PROPERTY: header-args:sql+    :engine postgresql
#+PROPERTY: header-args:sql+    :dbhost localhost
#+PROPERTY: header-args:sql+    :dbuser akvo
#+PROPERTY: header-args:sql+    :dbpassword password
#+PROPERTY: header-args:sql+    :database demo
#+PROPERTY: header-args :tangle data-model.sql
#+STARTUP: fold

* Notes
#+name: pd2org
#+begin_src python :var df="df" :exports none
  return f"return tabulate({df}, headers={df}.columns, tablefmt='orgtbl')"
#+end_src

#+name: usage example
#+header: :prologue from tabulate import tabulate
#+header: :noweb strip-export
#+begin_src python :results value raw :exports none
  import pandas as pd
  df = pd.DataFrame([{"a":1} for a in range(2)])
  <<pd2org("df")>>
#+end_src

#+RESULTS:
* Cases
Sanitation Service Level from [[https://app.excalidraw.com/s/2tVeGVHqKIQ/6Aoixp68qlt][Excalidraw Link]]
** Questions

#+name: QUESTION LIST
#+begin_src sql
  SELECT id, name FROM question
  WHERE id IN (567800083,567800082,567820002,578820191,567800081,567820008)
#+end_src

#+RESULTS: QUESTION LIST
|        id | name                                                                                        |
|-----------+---------------------------------------------------------------------------------------------|
| 567820002 | School type                                                                                 |
| 578820191 | Is this school Girls Only/Boys Only/Co-Education?                                           |
| 567820008 | Are there any students or staff members with a disability?                                  |
| 567800083 | Does your school have toilet for students?                                                  |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) |
| 567800081 | Are the toilets/latrines separate for girls and boys?                                       |

** Option List

#+name: OPTION LIST
#+begin_src sql
  SELECT q.id, q.name as question, q.type, o.name as opt FROM option o
  RIGHT JOIN question q
  ON q.id = o.question
  WHERE q.id IN (567800083,567800082,567820002,578820191,567800081,567800080)
#+end_src

#+RESULTS: OPTION LIST
|        id | question                                                                                    | type   | opt                                                |
|-----------+---------------------------------------------------------------------------------------------+--------+----------------------------------------------------|
| 567820002 | School type                                                                                 | option | Kindergarten/Child Care Centre                     |
| 567820002 | School type                                                                                 | option | Primary                                            |
| 567820002 | School type                                                                                 | option | Secondary                                          |
| 567820002 | School type                                                                                 | option | Higher Secondary/10+2                              |
| 567820002 | School type                                                                                 | option | Other                                              |
| 578820191 | Is this school Girls Only/Boys Only/Co-Education?                                           | option | Girls Only                                         |
| 578820191 | Is this school Girls Only/Boys Only/Co-Education?                                           | option | Boys Only                                          |
| 578820191 | Is this school Girls Only/Boys Only/Co-Education?                                           | option | Co-education                                       |
| 567800083 | Does your school have toilet for students?                                                  | option | Yes                                                |
| 567800083 | Does your school have toilet for students?                                                  | option | No                                                 |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) | option | Toilet that flush/poor flush to piped sewer system |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) | option | Toilet that flush/poor flush to septic tank        |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) | option | Toilet that flush/poor flush to elsewhere          |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) | option | Toilet that flush/poor flush but don't know where  |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) | option | Pit latrine with slab                              |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) | option | Ventilated Improved Pit latrine (VIP)              |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) | option | Twinpit offset latrine                             |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) | option | Composting toilet                                  |
| 567800082 | What type of student toilets are at the school? (Select the one that is most commonly used) | option | Pit latrine without slab/open pit                  |
| 567800081 | Are the toilets/latrines separate for girls and boys?                                       | option | Yes                                                |
| 567800081 | Are the toilets/latrines separate for girls and boys?                                       | option | No                                                 |
| 567800080 | How many student toilets are currently usable (accessible and functional and private)?      | number |                                                    |

** Environment
#+begin_src python :results output :exports both :session with_question_ids
import psycopg2
import pandas as pd
import itertools as it
from tabulate import tabulate
from sqlalchemy import create_engine
config = [{
    "name": "Basic",
    "questions": [{
        "id": 567800083,
        "name": "School Has Toilet",
        "options": ["Yes"],
        "other": [{
            "name": "Was Limited",
            "options": ["Underconstruction"],
            "questions": [{
                "id": 999,
                "number": {
                    "greater_than": 0
                },
                "else": {
                    "value": "No Service"
                }
            }]
        }],
        "else": {
            "value": "No Service"
        }
    },{
        "id": 567800082,
        "name": "Toilet Type",
        "options": [
            "Toilet that flush/poor flush to piped sewer system",
            "Toilet that flush/poor flush to septic tank",
            "Toilet that flush/poor flush to elsewhere",
            "Toilet that flush/poor flush but don't know where",
            "Pit latrine with slab",
            "Ventilated Improved Pit latrine (VIP)",
            "Twinpit offset latrine"
        ],
        "else": {
            "value": "Limited"
        }
    },{
        "id":567820002,
        "name": "School Type",
        "options": ["Primary", "Kindergarten/Child Care Centre"],
        "else": {
            "ignore": [578820191,567800081]
        }
    },{
        "id": 578820191,
        "name": "Is the school co-ed",
        "options": ["Co-education"],
        "else": {
            "ignore": [567800081]
        }
    },{
        "id": 567800081,
        "name": "Saperate Toilet",
        "options": ["Yes"],
        "else": {
            "value": "Limited"
        }
    },{
        "id": 567800080,
        "name": "Usable Toilet",
        "number": {
            "greater_than": 3
        },
        "else": {
            "value": "Limited"
        }
    }]
}]
def get_question_config(n, current_list):
    for q in n.get("questions"):
        current_list.append(str(q["id"]))
        if q.get("other"):
            for o in q.get("other"):
                current_list = get_question_config(o, current_list)
    return current_list

question_config = []
for c in config:
    question_config = get_question_config(c, question_config)

question_lists = ",".join(question_config)

DATABASE_URL='postgresql+psycopg2://akvo:password@127.0.0.1/demo'
engine = create_engine(DATABASE_URL, pool_recycle=3600);
db = engine.connect();
print("SESSION CREATED")
#+end_src

#+RESULTS:
: SESSION CREATED

#+name: Config
#+begin_src python :results output :exports both :session with_question_ids
print(question_lists)
print(config)
#+end_src

#+RESULTS: Config
: 567800083,999,567800082,567820002,578820191,567800081,567800080
: [{'name': 'Basic', 'questions': [{'id': 567800083, 'name': 'School Has Toilet', 'options': ['Yes'], 'other': [{'name': 'Was Limited', 'options': ['Underconstruction'], 'questions': [{'id': 999, 'number': {'greater_than': 0}, 'else': {'value': 'No Service'}}]}], 'else': {'value': 'No Service'}}, {'id': 567800082, 'name': 'Toilet Type', 'options': ['Toilet that flush/poor flush to piped sewer system', 'Toilet that flush/poor flush to septic tank', 'Toilet that flush/poor flush to elsewhere', "Toilet that flush/poor flush but don't know where", 'Pit latrine with slab', 'Ventilated Improved Pit latrine (VIP)', 'Twinpit offset latrine'], 'else': {'value': 'Limited'}}, {'id': 567820002, 'name': 'School Type', 'options': ['Primary', 'Kindergarten/Child Care Centre'], 'else': {'ignore': [578820191, 567800081]}}, {'id': 578820191, 'name': 'Is the school co-ed', 'options': ['Co-education'], 'else': {'ignore': [567800081]}}, {'id': 567800081, 'name': 'Saperate Toilet', 'options': ['Yes'], 'else': {'value': 'Limited'}}, {'id': 567800080, 'name': 'Usable Toilet', 'number': {'greater_than': 3}, 'else': {'value': 'Limited'}}]}]

** Probability

#+RESULTS:

#+name: Probability
#+begin_src python :results value raw :exports both :session with_question_ids
query = f"""
        SELECT q.id, concat(q.id,'|',o.name) as options FROM option o
        LEFT JOIN question q
        ON o.question = q.id
        WHERE q.id IN ({question_lists})
        """
df = pd.read_sql(query, db);
unique_id = df["id"].unique()
answers = []
for u in unique_id:
    group = list(df[df.id == u]["options"])
    answers.append(group)
res = []
for answer in list(it.product(*answers)):
    dict_answer = {}
    for a in answer:
        q = a.split('|')
        dict_answer.update({q[0]: q[1]})
    res.append(dict_answer)
res = pd.DataFrame(res)
#tabulate(res, headers=res.columns, tablefmt='orgtbl')
res.shape
#+end_src

#+RESULTS: Probability
(810, 5)

* 1st Proposal
** Materialized Views

#+NAME: BASIC DATA
#+begin_src sql
SELECT q.form, a.data, jsonb_object_agg(a.question, COALESCE(a.options, array[a.value::text])) as opt
FROM answer a
LEFT JOIN question q ON q.id = a.question
WHERE (a.value IS NOT NULL OR a.options IS NOT NULL)
AND q.id IN (567800083,567800082,567820002,578820191,567800081,567800080,999)
GROUP BY q.form, a.data
#+end_src

#+RESULTS: BASIC DATA
|      form | data | opt                                                                                                    |
|-----------+------+--------------------------------------------------------------------------------------------------------|
| 554360198 |    1 | {"999": ["4"], "567800083": ["Underconstruction"], "567820002": ["Primary"], "578820191": ["Co-education"]} |
| 554360198 |    2 | {"567800083": ["No"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Boys Only"]}              |
| 554360198 |    3 | {"567800083": ["No"], "567820002": ["Kindergarten/Child Care Centre"], "578820191": ["Co-education"]}  |
| 554360198 |    4 | {"567800083": ["No"], "567820002": ["Secondary"], "578820191": ["Girls Only"]}                         |
| 554360198 |    5 | {"999": ["3"], "567800083": ["Underconstruction"], "567820002": ["Primary"], "578820191": ["Girls Only"]} |
| 554360198 |    6 | {"567800083": ["No"], "567820002": ["Primary"], "578820191": ["Girls Only"]}                           |
| 554360198 |    7 | {"567800080": ["3"], "567800082": ["Ventilated Improved Pit latrine (VIP)"], "567800083": ["Yes"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Girls Only"]} |
| 554360198 |    8 | {"999": ["3"], "567800083": ["Underconstruction"], "567820002": ["Primary"], "578820191": ["Girls Only"]} |
| 554360198 |    9 | {"999": ["5"], "567800083": ["Underconstruction"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Girls Only"]} |
| 554360198 |   10 | {"999": ["2"], "567800083": ["Underconstruction"], "567820002": ["Secondary"], "578820191": ["Boys Only"]} |
| 554360198 |   11 | {"567800083": ["No"], "567820002": ["Primary"], "578820191": ["Boys Only"]}                            |
| 554360198 |   12 | {"999": ["3"], "567800083": ["Underconstruction"], "567820002": ["Kindergarten/Child Care Centre"], "578820191": ["Girls Only"]} |
| 554360198 |   13 | {"567800083": ["No"], "567820002": ["Primary"], "578820191": ["Girls Only"]}                           |
| 554360198 |   14 | {"567800083": ["No"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Co-education"]}           |
| 554360198 |   15 | {"567800080": ["3"], "567800081": ["Yes"], "567800082": ["Toilet that flush/poor flush to piped sewer system"], "567800083": ["Yes"], "567820002": ["Kindergarten/Child Care Centre"], "578820191": ["Co-education"]} |
| 554360198 |   16 | {"999": ["3"], "567800083": ["Underconstruction"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Co-education"]} |
| 554360198 |   17 | {"567800080": ["4"], "567800081": ["No"], "567800082": ["Twinpit offset latrine"], "567800083": ["Yes"], "567820002": ["Primary"], "578820191": ["Co-education"]} |
| 554360198 |   18 | {"567800083": ["No"], "567820002": ["Primary"], "578820191": ["Girls Only"]}                           |
| 554360198 |   19 | {"567800083": ["No"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Boys Only"]}              |
| 554360198 |   20 | {"567800083": ["No"], "567820002": ["Secondary"], "578820191": ["Girls Only"]}                         |
| 554360198 |   21 | {"567800080": ["4"], "567800082": ["Toilet that flush/poor flush but don't know where"], "567800083": ["Yes"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Girls Only"]} |
| 554360198 |   22 | {"567800080": ["2"], "567800082": ["Toilet that flush/poor flush to elsewhere"], "567800083": ["Yes"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Boys Only"]} |
| 554360198 |   23 | {"567800080": ["1"], "567800082": ["Toilet that flush/poor flush but don't know where"], "567800083": ["Yes"], "567820002": ["Primary"], "578820191": ["Girls Only"]} |
| 554360198 |   24 | {"567800080": ["3"], "567800082": ["Twinpit offset latrine"], "567800083": ["Yes"], "567820002": ["Kindergarten/Child Care Centre"], "578820191": ["Girls Only"]} |
| 554360198 |   25 | {"999": ["3"], "567800083": ["Underconstruction"], "567820002": ["Other"], "578820191": ["Girls Only"]} |
| 554360198 |   26 | {"567800080": ["2"], "567800081": ["Yes"], "567800082": ["Toilet that flush/poor flush but don't know where"], "567800083": ["Yes"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Co-education"]} |
| 554360198 |   27 | {"567800080": ["4"], "567800082": ["Toilet that flush/poor flush to septic tank"], "567800083": ["Yes"], "567820002": ["Primary"], "578820191": ["Boys Only"]} |
| 554360198 |   28 | {"567800083": ["No"], "567820002": ["Other"], "578820191": ["Girls Only"]}                             |
| 554360198 |   29 | {"567800083": ["No"], "567820002": ["Primary"], "578820191": ["Co-education"]}                         |
| 554360198 |   30 | {"567800080": ["2"], "567800082": ["Pit latrine without slab/open pit"], "567800083": ["Yes"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Girls Only"]} |
| 554360198 |   31 | {"999": ["4"], "567800083": ["Underconstruction"], "567820002": ["Other"], "578820191": ["Co-education"]} |
| 554360198 |   32 | {"999": ["4"], "567800083": ["Underconstruction"], "567820002": ["Secondary"], "578820191": ["Girls Only"]} |
| 554360198 |   33 | {"567800083": ["No"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Co-education"]}           |
| 554360198 |   34 | {"999": ["3"], "567800083": ["Underconstruction"], "567820002": ["Kindergarten/Child Care Centre"], "578820191": ["Girls Only"]} |
| 554360198 |   35 | {"567800083": ["No"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Boys Only"]}              |
| 554360198 |   36 | {"999": ["1"], "567800083": ["Underconstruction"], "567820002": ["Kindergarten/Child Care Centre"], "578820191": ["Girls Only"]} |
| 554360198 |   37 | {"567800080": ["4"], "567800082": ["Ventilated Improved Pit latrine (VIP)"], "567800083": ["Yes"], "567820002": ["Other"], "578820191": ["Boys Only"]} |
| 554360198 |   38 | {"567800080": ["4"], "567800082": ["Toilet that flush/poor flush but don't know where"], "567800083": ["Yes"], "567820002": ["Secondary"], "578820191": ["Boys Only"]} |
| 554360198 |   39 | {"567800080": ["2"], "567800082": ["Ventilated Improved Pit latrine (VIP)"], "567800083": ["Yes"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Boys Only"]} |
| 554360198 |   40 | {"567800083": ["No"], "567820002": ["Secondary"], "578820191": ["Co-education"]}                       |
| 554360198 |   41 | {"567800080": ["5"], "567800081": ["No"], "567800082": ["Toilet that flush/poor flush to piped sewer system"], "567800083": ["Yes"], "567820002": ["Kindergarten/Child Care Centre"], "578820191": ["Co-education"]} |
| 554360198 |   42 | {"567800080": ["3"], "567800081": ["Yes"], "567800082": ["Pit latrine with slab"], "567800083": ["Yes"], "567820002": ["Secondary"], "578820191": ["Co-education"]} |
| 554360198 |   43 | {"567800080": ["5"], "567800082": ["Toilet that flush/poor flush but don't know where"], "567800083": ["Yes"], "567820002": ["Primary"], "578820191": ["Girls Only"]} |
| 554360198 |   44 | {"567800080": ["5"], "567800081": ["Yes"], "567800082": ["Toilet that flush/poor flush to septic tank"], "567800083": ["Yes"], "567820002": ["Primary"], "578820191": ["Co-education"]} |
| 554360198 |   45 | {"567800083": ["No"], "567820002": ["Higher Secondary/10+2"], "578820191": ["Co-education"]}           |
| 554360198 |   46 | {"567800080": ["4"], "567800082": ["Toilet that flush/poor flush but don't know where"], "567800083": ["Yes"], "567820002": ["Primary"], "578820191": ["Boys Only"]} |
| 554360198 |   47 | {"567800083": ["No"], "567820002": ["Kindergarten/Child Care Centre"], "578820191": ["Boys Only"]}     |
| 554360198 |   48 | {"999": ["5"], "567800083": ["Underconstruction"], "567820002": ["Other"], "578820191": ["Girls Only"]} |
| 554360198 |   49 | {"567800083": ["No"], "567820002": ["Secondary"], "578820191": ["Co-education"]}                       |

** Data Query

#+name: CHAIN RG
#+begin_src python :results output :exports both :session with_question_ids
query = f"""
    SELECT q.form, a.data, jsonb_object_agg(a.question, COALESCE(a.options, array[a.value::text])) as opt
    FROM answer a
    LEFT JOIN question q ON q.id = a.question
    WHERE (a.value IS NOT NULL OR a.options IS NOT NULL)
    AND a.question IN ({question_lists})
    GROUP BY q.form, a.data
"""
df = pd.read_sql(query, db);
# db.connection.close()

def validate_number(q, answer):
    aw = float(answer[0])
    op = q.get("number")
    ok = False
    if "greater_than" in op:
        ok = aw > op.get("greater_than")
    if "less_than" in op:
        ok = aw < op.get("less_than")
    if "equal" in op:
        ok = aw == op.get("equal")
    if "greater_than_equal" in op:
        ok = aw >= op.get("greater_than_equal")
    if "less_than_equal" in op:
        ok = aw <= op.get("less_than_equal")
    return ok

def get_valid_list(opt, c, category):
    validator = [q["id"] for q in  c['questions']]
    valid = []
    exit = False
    for q in c['questions']:
        if exit:
            continue
        answer = opt.get(str(q['id']))
        if not answer:
            opt.update({str(q['id']): None})
            continue
        if q.get("number"):
            is_valid = validate_number(q, answer)
            if is_valid:
                valid.append(q["id"])
            else:
                elses = q.get("else")
                category = elses.get("value")
                exit = True
        if q.get("options"):
            if len(set(q['options']).intersection(answer)):
                valid.append(q["id"])
            ## TODO Merge else with above
            else:
                if q.get("else"):
                    elses = q.get("else")
                    if elses.get("value"):
                        category = elses.get("value")
                        exit = True
                    if elses.get("ignore"):
                        validator = list(filter(lambda x: x not in elses.get("ignore"), validator))
                        valid.append(q["id"])
                if q.get("other"):
                    for o in q.get("other"):
                        if len(set(o['options']).intersection(answer)):
                            exit = True
                            category = get_valid_list(opt, o, category)
    if len(valid) > len(validator):
        conditions = [v if v in valid else False for v in validator]
        conditions = list(filter(lambda x: x != False, conditions))
        if sorted(conditions) == sorted(validator):
            category = c['name']
    if sorted(valid) == sorted(validator):
        category = c['name']
    return category

def get_category(opt):
    category = False
    for c in config:
        category = get_valid_list(opt, c, category)
    return category

results = df.to_dict('records')
for d in results:
    d.update({'category': get_category(d['opt'])})
res = pd.DataFrame(results)
res = pd.concat([res.drop('opt', axis=1), pd.DataFrame(df['opt'].tolist())], axis=1)
res = res[[
    "data",
    "category",
    "567800083",
    "567800082",
    "578820191",
    "567820002",
    "567800081",
    "567800080",
    "999"]]
res = res.rename(columns={
    "567820002": "Scholl Type",
    "578820191": "Co-ed",
    "567800080": "Usable Toilets",
    "999": "Usable Toilets Before",
    "567800081": "Separate Toilets",
    "567800083": "Has Toilet",
    "567800082": "Toilet Improved",
})
res.to_csv('./research.csv',index=None)
tabulate(res, headers=res.columns, tablefmt='orgtbl')
db.close()
# Debug
print("SUCCESS")
#qname = pd.read_sql("SELECT name FROM question WHERE question = 567820002", db)
#qname
#+end_src

#+RESULTS: CHAIN RG
: SUCCESS
